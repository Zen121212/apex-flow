{"ast":null,"code":"import _asyncToGenerator from \"/Users/Zen/Desktop/ApexFlow/apps/angular-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { signal } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      this.userSubject = new BehaviorSubject(null);\n      this.user$ = this.userSubject.asObservable();\n      this.isAuthenticated = signal(false);\n      this.currentUser = signal(null);\n      this.loadUserFromStorage();\n    }\n    loadUserFromStorage() {\n      const storedUser = localStorage.getItem(\"user\");\n      if (storedUser) {\n        const user = JSON.parse(storedUser);\n        this.setUser(user);\n      }\n    }\n    setUser(user) {\n      this.userSubject.next(user);\n      this.currentUser.set(user);\n      this.isAuthenticated.set(!!user);\n      if (user) {\n        localStorage.setItem(\"user\", JSON.stringify(user));\n      } else {\n        localStorage.removeItem(\"user\");\n      }\n    }\n    signInWithEmail(email, password) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this.delay(1000);\n          const user = {\n            id: \"1\",\n            email,\n            name: email.split(\"@\")[0],\n            provider: \"email\"\n          };\n          _this.setUser(user);\n          return true;\n        } catch (error) {\n          console.error(\"Sign in error:\", error);\n          return false;\n        }\n      })();\n    }\n    signUpWithEmail(email, password, name) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this2.delay(1000);\n          const user = {\n            id: Date.now().toString(),\n            email,\n            name,\n            provider: \"email\"\n          };\n          _this2.setUser(user);\n          return true;\n        } catch (error) {\n          console.error(\"Sign up error:\", error);\n          return false;\n        }\n      })();\n    }\n    signInWithGoogle() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this3.delay(1500);\n          const user = {\n            id: \"google-\" + Date.now(),\n            email: \"user@gmail.com\",\n            name: \"Google User\",\n            provider: \"google\"\n          };\n          _this3.setUser(user);\n          return true;\n        } catch (error) {\n          console.error(\"Google sign in error:\", error);\n          return false;\n        }\n      })();\n    }\n    signOut() {\n      this.setUser(null);\n    }\n    delay(ms) {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: \"root\"\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}